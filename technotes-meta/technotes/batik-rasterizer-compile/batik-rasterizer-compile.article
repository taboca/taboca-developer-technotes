= Compiling Batik and Batik Rasterizer =

Make sure you have a JDK system working and path environment variables. 

 * [http://xmlgraphics.apache.org/batik/download.cgi#Subversion+repository Download Batik source]
 * Make sure you have Ant
 * ant compile
 * ant jars
 * cd contrib
 * cd rasterizertask

== 1  Compile the RasterizerTask ==

 * Set the BATIK_HOME to ../../ ( from the rasterizertask directory ) 
 * ant -lib ../../batik-1.8pre/batik-rasterizer.jar  compile
 * ant jar 
 * Check the output in ./build/lib

== Running a Build.xml with ANT and batik rasterizer task ==

Now create a new directory for your project and place the Batik and the batikrasterizer lib files in a lib directory. You will probably need a few files like this: 

| RasterizerTask.jar
| batik-rasterizer.jar
| batik-transcoder.jar
| batik-util.jar

== Create your build.xml with the rasterizer task ==

Notice these are some of the batik lib files you may need. If you get other errors you may consider adding more of the jar files to your lib direcoty and put them here in the classpath. 

| <?xml version="1.0"?>
| <project name="fftheme" default="gera-png" basedir=".">
|      <taskdef name="rasterize" classname="org.apache.tools.ant.taskdefs.optional.RasterizerTask" >
|        <classpath>
|
|           <classpath>
|          <pathelement location="./lib/*.jar" />
|          <pathelement location="./lib/batik-parser.jar" />
|          <pathelement location="./lib/batik-awt-util.jar" />
|          <pathelement location="./lib/batik-script.jar" />
|          <pathelement location="./lib/batik-xml.jar" />
|          <pathelement location="./lib/batik-codec.jar" />
|          <pathelement location="./lib/batik-ext.jar" />
|          <pathelement location="./lib/batik-css.jar" />
|          <pathelement location="./lib/batik-anim.jar" />
|          <pathelement location="./lib/batik-svg-dom.jar" />
|          <pathelement location="./lib/batik-svggen.jar" />
|          <pathelement location="./lib/batik-gvt.jar" />
|          <pathelement location="./lib/batik-bridge.jar" />
|          <pathelement location="./lib/batik-dom.jar" />
|          <pathelement location="./lib/batik-util.jar" />
|          <pathelement location="./lib/batik-transcoder.jar" />
|          <pathelement location="./lib/batik-rasterizer.jar" />
|          <pathelement location="./lib/xml-apis-ext.jar" />
|          <pathelement location="./lib/RasterizerTask.jar" />
|        </classpath>
|      </taskdef>
|
|     <rasterize  
|            result="image/png"
|            destdir="out">
|            <fileset dir="src">
|                <include name="*.svg" />
|            </fileset>
|      </rasterize>
| </project>

== Troubles? ==

If you get a null  pointer exception bug then you may need to revisit the RasterizerTask Java code, edit and recompile it. I found some postings on the Web on the possible problem. Here is the line: 

On RasterizerTask.java: 

 * XMLResourceDescriptor.setXMLParserClassName(getParserClassName(readerClassName));
 * to 
 * XMLResourceDescriptor.setXMLParserClassName(getParserClassName(JAXP_PARSER));

Then recompile (1) the ~batik/contrib/rasterizertask project and copy RasterizerTask.jar again to your working lib directory where ANT will look - the lib pathname specified in the build.xml



